from pydantic import BaseModel, Field

class ChatMessage(BaseModel):
    role: str = Field(..., description="The role of the author's message, e.g., 'users' or 'assistant'.")
    content: str = Field(..., description="The content of the message.")

class ChatCompletionRequest(BaseModel):
    model: str = Field(..., description="The model to use for the chats completion.")
    messages: list[ChatMessage] = Field(..., description="A list of messages in the chats conversation.")
    max_tokens: int = Field(150, description="The maximum number of tokens to generate in the response.")

class ChatCompletionResponse(BaseModel):
    id: str = Field(..., description="The unique identifier for the chats completion request.")
    object: str = Field(..., description="The type of object returned, e.g., 'chats.completion'.")
    created: int = Field(..., description="The timestamp when the chats completion was created.")
    model: str = Field(..., description="The model used for the chats completion.")
    choices: list[ChatMessage] = Field(..., description="A list of choices generated by the model in response to the input messages.")
